// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  avatar    String?
  products  Product[]
  tokens    Token[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Category1 {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  Category2 Category2[]
  Product   Product[]
}

model Category2 {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  category1   Category1   @relation(fields: [category1Id], references: [id], onDelete: Cascade)
  category1Id Int
  Category3   Category3[]
  Product     Product[]

  @@index([category1Id])
}

model Category3 {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  category2   Category2 @relation(fields: [category2Id], references: [id], onDelete: Cascade)
  category2Id Int
  Product     Product[]

  @@index([category2Id])
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  image       String
  price       Int
  description String    @db.MediumText
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  category1   Category1 @relation(fields: [category1Id], references: [id], onDelete: Cascade)
  category1Id Int
  category2   Category2 @relation(fields: [category2Id], references: [id], onDelete: Cascade)
  category2Id Int
  category3   Category3 @relation(fields: [category3Id], references: [id], onDelete: Cascade)
  category3Id Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
  @@index([category1Id])
  @@index([category2Id])
  @@index([category3Id])
}
