// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  avatar    String?
  items     Item[]
  tokens    Token[]
  favs      Fav[]
  cart      CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  Subcategory Subcategory[]
  Item        Item[]
}

model Subcategory {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  Item       Item[]

  @@index([categoryId])
}

model Item {
  id            Int         @id @default(autoincrement())
  name          String
  image         String
  price         Int
  description   String      @db.MediumText
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  category      Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    Int
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId Int
  favs          Fav[]
  cartItem      CartItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([userId])
  @@index([categoryId])
  @@index([subcategoryId])
}

model Fav {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([itemId])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    Int
  qty       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([itemId])
}
